<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>BookSy - Your Favorite Bookstore</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .book-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }
    .hero-section {
      background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/api/placeholder/1200/400');
      background-size: cover;
      background-position: center;
    }
  </style>
</head>
<body class="bg-gray-50">

<!-- Navbar (shared partial) -->
<%- include('partials/navbar') %>
  
    <div class="container mx-auto px-4 py-8">
        <div class="flex flex-col md:flex-row gap-6">
            <!-- Filters Sidebar -->
            <div class="w-full md:w-1/4 bg-white p-4 rounded-lg shadow">
                <div class="mb-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800">Search</h3>
                    <form id="searchForm" action="/products" method="GET" class="flex flex-col gap-2">
                        <input 
                            type="text" 
                            name="search" 
                            value="<%= search || '' %>" 
                            placeholder="Search books..." 
                            class="w-full p-2 border border-gray-300 rounded"
                        >
                        <!-- Updated hidden inputs to handle multiple categories -->
                        <% if (Array.isArray(category) && category.length > 0) { %>
                            <% category.forEach(cat => { %>
                                <input type="hidden" name="category" value="<%= cat %>">
                            <% }) %>
                        <% } else if (category) { %>
                            <input type="hidden" name="category" value="<%= category %>">
                        <% } %>
                        <input type="hidden" name="minPrice" value="<%= minPrice || '' %>">
                        <input type="hidden" name="maxPrice" value="<%= maxPrice || '' %>">
                        <input type="hidden" name="sort" value="<%= sort || '' %>">
                        <input type="hidden" name="page" value="1">
                        
                        <div class="flex space-x-2">
                            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 flex-grow">
                                <i class="fas fa-search mr-2"></i> Search
                            </button>
                            <% if (search) { %>
                                <a href="/products?<%= new URLSearchParams(
                                    Object.fromEntries(
                                        Object.entries({ 
                                            category: Array.isArray(category) ? category : [category], 
                                            minPrice, 
                                            maxPrice, 
                                            sort, 
                                            page: 1 
                                        })
                                        .filter(([_, v]) => v !== undefined && v !== '')
                                    )
                                ).toString() %>" 
                                class="bg-gray-300 text-gray-700 px-3 py-2 rounded hover:bg-gray-400">
                                    <i class="fas fa-times"></i>
                                </a>
                            <% } %>
                        </div>
                    </form>
                </div>
                <div class="mb-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800">Categories</h3>
                    <form id="categoryForm" action="/products" method="GET">
                        <input type="hidden" name="search" value="<%= search || '' %>">
                        <input type="hidden" name="minPrice" value="<%= minPrice || '' %>">
                        <input type="hidden" name="maxPrice" value="<%= maxPrice || '' %>">
                        <input type="hidden" name="sort" value="<%= sort || '' %>">
                        <input type="hidden" name="page" value="1">
                        
                        <div class="space-y-2">
                            <div class="flex items-center">
                                <input 
                                    type="checkbox" 
                                    id="all-categories" 
                                    name="all_categories" 
                                    <%= !category || category.length === 0 ? 'checked' : '' %> 
                                    class="mr-2"
                                    onchange="handleAllCategoriesChange(this)"
                                >
                                <label for="all-categories" class="text-gray-700">All Categories</label>
                            </div>
                            
                            <% categories.forEach(cat => { %>
                                <div class="flex items-center">
                                    <input 
                                        type="checkbox" 
                                        id="category-<%= cat._id %>" 
                                        name="category" 
                                        value="<%= cat._id %>" 
                                        <%= Array.isArray(category) && category.includes(cat._id.toString()) ? 'checked' : '' %> 
                                        class="mr-2 category-checkbox"
                                        onchange="handleCategoryChange()"
                                    >
                                    <label for="category-<%= cat._id %>" class="text-gray-700"><%= cat.name %></label>
                                </div>
                            <% }) %>
                        </div>
                        
                        <div class="mt-4">
                            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 w-full">
                                Apply Filters
                            </button>
                        </div>
                    </form>
                </div>

                <div class="mb-6">
                    <h3 class="text-lg font-semibold mb-4 text-gray-800">Price Range</h3>
                    <form id="priceForm" action="/products" method="GET" class="space-y-3">
                        <input type="hidden" name="search" value="<%= search || '' %>">
                        
                        <!-- ✅ Corrected handling for multiple categories -->
                        <% if (Array.isArray(category) && category.length > 0) { %>
                            <% category.forEach(cat => { %>
                                <input type="hidden" name="category" value="<%= cat %>">
                            <% }) %>
                        <% } else if (category) { %>
                            <input type="hidden" name="category" value="<%= category %>">
                        <% } %>
                        
                        <input type="hidden" name="sort" value="<%= sort || '' %>">
                        <input type="hidden" name="page" value="1">
                    
                        <div class="flex space-x-2">
                            <div class="w-1/2">
                                <label for="minPrice" class="block text-sm text-gray-600">Min</label>
                                <input 
                                    type="number" 
                                    id="minPrice" 
                                    name="minPrice" 
                                    value="<%= minPrice || '' %>" 
                                    placeholder="₹0" 
                                    min="0"
                                    class="w-full p-2 border border-gray-300 rounded"
                                >
                            </div>
                            <div class="w-1/2">
                                <label for="maxPrice" class="block text-sm text-gray-600">Max</label>
                                <input 
                                    type="number" 
                                    id="maxPrice" 
                                    name="maxPrice" 
                                    value="<%= maxPrice || '' %>" 
                                    placeholder="₹10000" 
                                    min="0"
                                    class="w-full p-2 border border-gray-300 rounded"
                                >
                            </div>
                        </div>
                    
                        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 w-full">
                            Apply
                        </button>
                    </form>
                    
                </div>
            </div>

            <!-- Products Section -->
            <div class="w-full md:w-3/4">
                <!-- Sort Controls -->
                <div class="bg-white p-4 rounded-lg shadow mb-6">
                    <div class="flex flex-col md:flex-row justify-between items-center">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4 md:mb-0">
                            Books
                            <% if (search) { %>
                                <span class="text-lg font-normal"> - Search results for "<%= search %>"</span>
                            <% } %>
                            <% if (category && categoryName) { %>
                                <span class="text-lg font-normal"> - Category: <%= categoryName %></span>
                            <% } %>
                        </h2>
                        
                        <div class="flex items-center">
                            <label for="sort" class="mr-2 text-gray-700">Sort by:</label>
                            <form action="/products" method="GET" class="flex-grow">
                                <input type="hidden" name="search" value="<%= search || '' %>">
                                <% if (Array.isArray(category) && category.length > 0) { %>
                                    <% category.forEach(cat => { %>
                                        <input type="hidden" name="category" value="<%= cat %>">
                                    <% }) %>
                                <% } else if (category) { %>
                                    <input type="hidden" name="category" value="<%= category %>">
                                <% } %>
                                <input type="hidden" name="minPrice" value="<%= minPrice || '' %>">
                                <input type="hidden" name="maxPrice" value="<%= maxPrice || '' %>">
                                <input type="hidden" name="page" value="<%= currentPage || 1 %>">
                                
                                <select 
                                    id="sort" 
                                    name="sort" 
                                    onchange="this.form.submit()" 
                                    class="p-2 border border-gray-300 rounded w-full"
                                >
                                    <option value="default" <%= sort === 'default' || !sort ? 'selected' : '' %>>Featured</option>
                                    <option value="price_asc" <%= sort === 'price_asc' ? 'selected' : '' %>>Price: Low to High</option>
                                    <option value="price_desc" <%= sort === 'price_desc' ? 'selected' : '' %>>Price: High to Low</option>
                                    <option value="title_asc" <%= sort === 'title_asc' ? 'selected' : '' %>>Title: A to Z</option>
                                    <option value="title_desc" <%= sort === 'title_desc' ? 'selected' : '' %>>Title: Z to A</option>
                                </select>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Product Count -->
                <div class="mb-4 text-gray-600">
                    Showing <%= products.length %> of <%= totalProducts %> books
                </div>
                  <!-- grid -->
                <% if (products.length > 0) { %>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                        <% products.forEach(product => { %>
                            <div class="bg-white rounded-lg shadow overflow-hidden hover:shadow-lg transition-all relative">
                                <!-- Wishlist Icon -->
<button 
class="wishlist-btn absolute top-3 right-3 z-10 bg-white bg-opacity-80 p-2 rounded-full shadow-sm hover:bg-opacity-100 transition-all"
data-product-id="<%= product._id %>"
data-in-wishlist="<%= userWishlistItems && userWishlistItems.includes(product._id.toString()) %>"
>
<i class="<%= userWishlistItems && userWishlistItems.includes(product._id.toString()) ? 'fas' : 'far' %> fa-heart text-<%= userWishlistItems && userWishlistItems.includes(product._id.toString()) ? 'red' : 'gray' %>-500 hover:text-red-500 transition-colors"></i>
</button>
                                
                                <a href="/products/<%= product._id %>" class="block">
                                  <!-- Fixed Image Container -->
                                  <div class="relative h-64">
                                    <img 
                                        src="<%= product.coverImage %>" 
                                        alt="<%= product.title %>"
                                        class="absolute inset-0 w-full h-full object-cover"
                                    />
                                 
                                </div>
                                    <div class="p-4">
                                        <h3 class="text-lg font-semibold text-gray-800 line-clamp-2"><%= product.title %></h3>
                                        <p class="text-gray-600 mt-1"><%= product.author %></p>
                                        <div class="flex items-center mt-2">
                                            <div class="flex items-center text-yellow-400 mr-2">
                                                <% for (let i = 1; i <= 5; i++) { %>
                                                    <% if (i <= Math.floor(product.ratings.average)) { %>
                                                        <i class="fas fa-star"></i>
                                                    <% } else if (i - 0.5 <= product.ratings.average) { %>
                                                        <i class="fas fa-star-half-alt"></i>
                                                    <% } else { %>
                                                        <i class="far fa-star"></i>
                                                    <% } %>
                                                <% } %>
                                            </div>
                                            <span class="text-gray-600 text-sm">(<%= product.ratings.count %>)</span>
                                        </div>
                                        <div class="mt-3 flex items-end">
                                            <% if (product.effectiveDiscount > 0) { %>
                                                <span class="text-lg font-bold text-gray-800">₹<%= product.finalPrice %></span>
                                                <span class="text-sm text-gray-500 line-through ml-2">₹<%= product.price %></span>
                                                
                                                <% if (product.discountSource === 'category') { %>
                                                    <span class="ml-2 text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded-full">
                                                        <%= product.discountPercentage %>% Category Offer
                                                    </span>
                                                <% } else { %>
                                                    <span class="ml-2 text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">
                                                        <%= product.discountPercentage %>% OFF
                                                    </span>
                                                <% } %>
                                            <% } else { %>
                                                <span class="text-lg font-bold text-gray-800">₹<%= product.price %></span>
                                            <% } %>
                                        </div>
                                        <div class="mt-2 flex items-center justify-between">
                                            <% if (product.stock > 0) { %>
                                                <span class="text-green-600 text-sm">In Stock</span>
                                            <% } else { %>
                                                <span class="text-red-600 text-sm">Out of Stock</span>
                                            <% } %>
                                        </div>
                                    </div>
                                </a>
                                <!-- Add to Cart Button -->
                                <div class="px-4 pb-4 mt-auto">
                                    <button 
                                    class="add-to-cart-btn w-full <%= product.stock <= 0 ? 'opacity-50 cursor-not-allowed bg-blue-600' : (userCartItems && userCartItems.includes(product._id.toString()) ? 'bg-green-600 hover:bg-green-700' : 'bg-blue-600 hover:bg-blue-700') %> text-white font-medium py-2 px-4 rounded transition-colors"
                                    <%= product.stock <= 0 ? 'disabled' : '' %>
                                    data-product-id="<%= product._id %>"
                                    data-state="<%= userCartItems && userCartItems.includes(product._id.toString()) ? 'go' : 'add' %>"
                                >
                                    <i class="fas <%= userCartItems && userCartItems.includes(product._id.toString()) ? 'fa-arrow-right' : 'fa-shopping-cart' %> mr-2"></i> 
                                    <%= userCartItems && userCartItems.includes(product._id.toString()) ? 'Go to Cart' : 'Add to Cart' %>
                                </button>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="bg-white p-8 rounded-lg shadow text-center">
                        <i class="fas fa-book-open text-5xl text-gray-400 mb-4"></i>
                        <h3 class="text-xl font-semibold text-gray-800 mb-2">No books found</h3>
                        <p class="text-gray-600">
                            Try adjusting your search or filter criteria to find what you're looking for.
                        </p>
                        <a href="/products" class="inline-block mt-4 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">
                            View All Books
                        </a>
                    </div>
                <% } %>

                <% if (totalPages > 1) { %>
                    <div class="mt-8 flex justify-center">
                        <nav class="inline-flex rounded-md shadow">
                            <% if (currentPage > 1) { %>
                                <a 
                                    href="/products?<%= new URLSearchParams({
                                        ...(search ? {search} : {}),
                                        ...Object.fromEntries(
                                            Array.isArray(category) 
                                            ? category.map(c => ['category', c]) 
                                            : (category ? [['category', category]] : [])
                                        ),
                                        ...(minPrice ? {minPrice} : {}),
                                        ...(maxPrice ? {maxPrice} : {}),
                                        ...(sort ? {sort} : {}),
                                        page: currentPage - 1
                                    }).toString() %>" 
                                    class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50"
                                >
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            <% } %>
                            
                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <% if (
                                    i === 1 || 
                                    i === totalPages || 
                                    (i >= currentPage - 1 && i <= currentPage + 1)
                                ) { %>
                                    <a 
                                        href="/products?<%= new URLSearchParams({
                                            ...(search ? {search} : {}),
                                            ...Object.fromEntries(
                                                Array.isArray(category) 
                                                ? category.map(c => ['category', c]) 
                                                : (category ? [['category', category]] : [])
                                            ),
                                            ...(minPrice ? {minPrice} : {}),
                                            ...(maxPrice ? {maxPrice} : {}),
                                            ...(sort ? {sort} : {}),
                                            page: i
                                        }).toString() %>" 
                                        class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-<%= currentPage === i ? 'blue-600 text-white' : 'white text-gray-700 hover:bg-gray-50' %> text-sm font-medium"
                                    >
                                        <%= i %>
                                    </a>
                                <% } else if (
                                    (i === 2 && currentPage > 3) || 
                                    (i === totalPages - 1 && currentPage < totalPages - 2)
                                ) { %>
                                    <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">
                                        ...
                                    </span>
                                <% } %>
                            <% } %>
                            
                            <% if (currentPage < totalPages) { %>
                                <a 
                                    href="/products?<%= new URLSearchParams({
                                        ...(search ? {search} : {}),
                                        ...Object.fromEntries(
                                            Array.isArray(category) 
                                            ? category.map(c => ['category', c]) 
                                            : (category ? [['category', category]] : [])
                                        ),
                                        ...(minPrice ? {minPrice} : {}),
                                        ...(maxPrice ? {maxPrice} : {}),
                                        ...(sort ? {sort} : {}),
                                        page: currentPage + 1
                                    }).toString() %>" 
                                    class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50"
                                >
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            <% } %>
                        </nav>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
  <%- include('partials/footer') %>
    
<script>
   document.addEventListener('DOMContentLoaded', function() {
    // Get all "Add to Cart" buttons on the page
    const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
    
    // Add click event listener to each button
    addToCartButtons.forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            const buttonState = this.getAttribute('data-state');
            
            // If button state is "go", redirect to cart
            if (buttonState === 'go') {
                window.location.href = '/cart';
                return;
            }
            
            // Otherwise, add to cart
            const quantity = 1; // Default quantity for product listing page
            
            // Only proceed if the button is not disabled
            if (!this.hasAttribute('disabled')) {
                addToCart(productId, quantity, this);
            }
        });
    });
    
    // Also handle the single product page button if it exists
    const singleProductAddBtn = document.getElementById('add-to-cart-btn');
    if (singleProductAddBtn) {
        singleProductAddBtn.addEventListener('click', function() {
            const buttonState = this.getAttribute('data-state');
            
            // If button state is "go", redirect to cart
            if (buttonState === 'go') {
                window.location.href = '/cart';
                return;
            }
            
            const productId = this.getAttribute('data-product-id');
            const quantity = document.getElementById('quantity') ? 
                parseInt(document.getElementById('quantity').value) : 1;
            
            addToCart(productId, quantity, this);
        });
    }
    
    // Function to handle adding to cart
    function addToCart(productId, quantity, buttonElement) {
    fetch('/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity }),
    })
    .then(response => {
        if (response.redirected) {
            window.location.href = response.url;
            return Promise.reject();
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            // Success handling remains the same
            buttonElement.innerHTML = '<i class="fas fa-arrow-right mr-2"></i> Go to Cart';
            buttonElement.classList.remove('bg-blue-600', 'hover:bg-blue-700');
            buttonElement.classList.add('bg-green-600', 'hover:bg-green-700');
            buttonElement.setAttribute('data-state', 'go');
            
            // Show success notification
            showNotification('Product added to cart successfully!', 'success');
        } else if (data.requireLogin) {
            // Handle login required response from backend
            showNotification('Please login to add items to your cart', 'warning');
            
            // Store the current page URL to return after login
            localStorage.setItem('redirectAfterLogin', window.location.pathname);
            
            // Redirect to login page after a short delay
            setTimeout(() => {
                window.location.href = '/login';
            }, 2000);
        } else {
            showNotification(data.message || 'Failed to add to cart', 'error');
        }
    })
    .catch(error => {
        if (error && error.message) {
            showNotification(error.message, 'error');
        }
    });
}

// Helper function for showing notifications
function showNotification(message, type) {
    const notification = document.createElement('div');
    
    // Set style based on notification type
    let bgColor = 'bg-green-500'; // success
    if (type === 'error') bgColor = 'bg-red-500';
    if (type === 'warning') bgColor = 'bg-yellow-500';
    
    notification.className = `fixed top-4 right-4 ${bgColor} text-white px-4 py-2 rounded shadow-lg z-50`;
    notification.innerHTML = message;
    document.body.appendChild(notification);
    
    // Remove notification after 3 seconds
    setTimeout(() => {
        notification.remove();
    }, 3000);
}
// Helper function for notifications
function showNotification(message, type) {
    const notification = document.createElement('div');
    
    // Set style based on type
    let bgColor = 'bg-green-500'; // success
    if (type === 'error') bgColor = 'bg-red-500';
    if (type === 'warning') bgColor = 'bg-yellow-500';
    
    notification.className = `fixed top-4 right-4 ${bgColor} text-white px-4 py-2 rounded shadow-lg z-50`;
    notification.innerHTML = message;
    document.body.appendChild(notification);
    
    // Remove notification after 3 seconds
    setTimeout(() => {
        notification.remove();
    }, 3000);
}
});
function handleAllCategoriesChange(checkbox) {
    // Get all category checkboxes
    const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
    
    // If "All Categories" is checked, uncheck all other categories
    if (checkbox.checked) {
        categoryCheckboxes.forEach(cb => {
            cb.checked = false;
        });
    }
}

function handleCategoryChange() {
    // Get all category checkboxes and the "All Categories" checkbox
    const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
    const allCategoriesCheckbox = document.getElementById('all-categories');
    
    // Check if any category is selected
    let anySelected = false;
    categoryCheckboxes.forEach(cb => {
        if (cb.checked) {
            anySelected = true;
        }
    });
    
    // If any category is selected, uncheck "All Categories"
    allCategoriesCheckbox.checked = !anySelected;
}

// Add event listener to ensure form is submitted with the right parameters
document.getElementById('categoryForm').addEventListener('submit', function(e) {
    const allCategoriesCheckbox = document.getElementById('all-categories');
    const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
    
    // If "All Categories" is checked, uncheck all other categories to ensure
    // we don't send any category parameters
    if (allCategoriesCheckbox.checked) {
        categoryCheckboxes.forEach(cb => {
            cb.checked = false;
        });
    }
});
document.addEventListener('DOMContentLoaded', function() {
    // Get all wishlist buttons on the page
    const wishlistButtons = document.querySelectorAll('.wishlist-btn');
    
    // Add click event listener to each wishlist button
    wishlistButtons.forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            const isInWishlist = this.getAttribute('data-in-wishlist') === 'true';
            
            toggleWishlistItem(productId, this);
        });
    });
    
    // Function to toggle wishlist item (add or remove)
    function toggleWishlistItem(productId, buttonElement) {
        fetch('/wishlist/toggle', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
                return Promise.reject();
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                // Update button appearance
                if (data.inWishlist) {
                    // Product added to wishlist
                    buttonElement.querySelector('i').classList.remove('far');
                    buttonElement.querySelector('i').classList.add('fas');
                    buttonElement.querySelector('i').classList.add('text-red-500');
                    
                    // If button has text (in product details page)
                    if (buttonElement.innerText.includes('Add to Wishlist')) {
                        buttonElement.innerHTML = `<i class="fas fa-heart mr-2"></i>Remove from Wishlist`;
                    }
                    
                    buttonElement.setAttribute('data-in-wishlist', 'true');
                    
                    // Show success notification
                    showNotification('Product added to wishlist successfully!', 'success');
                } else {
                    // Product removed from wishlist
                    buttonElement.querySelector('i').classList.remove('fas');
                    buttonElement.querySelector('i').classList.add('far');
                    buttonElement.querySelector('i').classList.remove('text-red-500');
                    
                    // If button has text (in product details page)
                    if (buttonElement.innerText.includes('Remove from Wishlist')) {
                        buttonElement.innerHTML = `<i class="far fa-heart mr-2"></i>Add to Wishlist`;
                    }
                    
                    buttonElement.setAttribute('data-in-wishlist', 'false');
                    
                    // Show success notification
                    showNotification('Product removed from wishlist', 'success');
                }
            } else if (data.requireLogin) {
                // Handle login required response from backend
                showNotification('Please login to manage your wishlist', 'warning');
                
                // Store the current page URL to return after login
                localStorage.setItem('redirectAfterLogin', window.location.pathname);
                
                // Redirect to login page after a short delay
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
            } else {
                showNotification(data.message || 'Failed to update wishlist', 'error');
            }
        })
        .catch(error => {
            if (error && error.message) {
                showNotification(error.message, 'error');
            }
        });
    }
    
    // Use existing showNotification function or create it if it doesn't exist
    if (typeof showNotification !== 'function') {
        window.showNotification = function(message, type) {
            const notification = document.createElement('div');
            
            // Set style based on notification type
            let bgColor = 'bg-green-500'; // success
            if (type === 'error') bgColor = 'bg-red-500';
            if (type === 'warning') bgColor = 'bg-yellow-500';
            
            notification.className = `fixed top-4 right-4 ${bgColor} text-white px-4 py-2 rounded shadow-lg z-50`;
            notification.innerHTML = message;
            document.body.appendChild(notification);
            
            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        };
    }
});
</script>
</body>
</html>