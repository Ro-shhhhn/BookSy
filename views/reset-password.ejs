<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>BookSy - Reset Password</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body class="bg-white min-h-screen flex flex-col">
  <div class="container mx-auto max-w-md px-4 py-8 flex-grow flex flex-col">
    <div class="flex items-center mb-16">
      <a href="/login" class="text-gray-700 flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-1">
          <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
        </svg>
        Back
      </a>
      <div class="mx-auto">
        <div class="flex items-center">
          <span class="ml-1 font-medium text-gray-800">BookSy</span>
        </div>
      </div>
    </div>

    <div class="flex-grow">
      <h1 class="text-2xl font-semibold text-center text-amber-700 mb-6">Reset Password</h1>

      <% if (error) { %>
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded shadow-sm">
          <div class="flex">
            <div class="flex-shrink-0">
              <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="ml-3">
              <p><%= error %></p>
            </div>
          </div>
        </div>
      <% } %>

      <% if (success) { %>
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded shadow-sm">
          <div class="flex">
            <div class="flex-shrink-0">
              <i class="fas fa-check-circle"></i>
            </div>
            <div class="ml-3">
              <p><%= success %></p>
            </div>
          </div>
          <script>
            setTimeout(function() {
              window.location.href = '/login';
            }, 3000);
          </script>
        </div>
      <% } %>

      <!-- Reset Password Form -->
      <form action="/reset-password" method="POST" class="space-y-5" id="resetForm">
        <div>
          <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
          <div class="relative">
            <input type="password" name="newPassword" id="newPassword" placeholder="Enter new password" 
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500 pr-10"
              required>
            <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-600">
              <i class="far fa-eye"></i>
            </button>
          </div>
          
          <div class="mt-2 space-y-2">
            <div class="text-sm font-medium text-gray-700 mb-1">Password must contain:</div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-1">
              <div class="flex items-center" id="length-check">
                <i class="far fa-circle-xmark text-red-500 mr-2 check-icon"></i>
                <span class="text-xs">At least 8 characters</span>
              </div>
              <div class="flex items-center" id="letter-check">
                <i class="far fa-circle-xmark text-red-500 mr-2 check-icon"></i>
                <span class="text-xs">At least one letter</span>
              </div>
              <div class="flex items-center" id="number-check">
                <i class="far fa-circle-xmark text-red-500 mr-2 check-icon"></i>
                <span class="text-xs">At least one number</span>
              </div>
              <div class="flex items-center" id="special-check">
                <i class="far fa-circle-xmark text-red-500 mr-2 check-icon"></i>
                <span class="text-xs">At least one special character</span>
              </div>
            </div>
          </div>
        </div>

        <div>
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
          <div class="relative">
            <input type="password" name="confirmPassword" id="confirmPassword" placeholder="Confirm your password" 
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500 pr-10"
              required>
            <button type="button" id="toggleConfirmPassword" class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-600">
              <i class="far fa-eye"></i>
            </button>
          </div>
          <div class="flex items-center mt-1" id="match-check">
            <i class="far fa-circle-xmark text-red-500 mr-2 check-icon"></i>
            <span class="text-xs">Passwords match</span>
          </div>
        </div>

        <!-- Hidden email field -->
        <input type="hidden" name="email" value="<%= email %>">

        <button type="submit" id="submitBtn" class="w-full bg-red-500 hover:bg-red-600 text-white font-medium py-3 rounded-md transition duration-200 mt-4 disabled:opacity-50 disabled:cursor-not-allowed">
          Reset Password
        </button>
      </form>
    </div>

    <!-- Footer -->
    <div class="mt-auto pt-8 pb-4 text-center text-xs text-gray-500">
      Â© All rights reserved. Made by smartsphere
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
        const passwordField = document.getElementById("newPassword");
        const confirmPasswordField = document.getElementById("confirmPassword");
        const resetForm = document.getElementById("resetForm");
        const submitBtn = document.getElementById("submitBtn");
        const togglePassword = document.getElementById("togglePassword");
        const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
        
        // Password requirement validation elements
        const lengthCheck = document.getElementById("length-check");
        const letterCheck = document.getElementById("letter-check");
        const numberCheck = document.getElementById("number-check");
        const specialCheck = document.getElementById("special-check");
        const matchCheck = document.getElementById("match-check");

        // Toggle password visibility
        togglePassword.addEventListener("click", function() {
            const type = passwordField.getAttribute("type") === "password" ? "text" : "password";
            passwordField.setAttribute("type", type);
            this.querySelector("i").classList.toggle("fa-eye");
            this.querySelector("i").classList.toggle("fa-eye-slash");
        });

        toggleConfirmPassword.addEventListener("click", function() {
            const type = confirmPasswordField.getAttribute("type") === "password" ? "text" : "password";
            confirmPasswordField.setAttribute("type", type);
            this.querySelector("i").classList.toggle("fa-eye");
            this.querySelector("i").classList.toggle("fa-eye-slash");
        });

        // Live validation functions
        function updateValidationUI() {
            const password = passwordField.value;
            const confirmPassword = confirmPasswordField.value;
            
            // Check length (8 or more characters)
            if (password.length >= 8) {
                updateCheckmark(lengthCheck, true);
            } else {
                updateCheckmark(lengthCheck, false);
            }
            
            // Check for letters
            if (/[A-Za-z]/.test(password)) {
                updateCheckmark(letterCheck, true);
            } else {
                updateCheckmark(letterCheck, false);
            }
            
            // Check for numbers
            if (/\d/.test(password)) {
                updateCheckmark(numberCheck, true);
            } else {
                updateCheckmark(numberCheck, false);
            }
            
            // Check for special characters
            if (/[\W_]/.test(password)) {
                updateCheckmark(specialCheck, true);
            } else {
                updateCheckmark(specialCheck, false);
            }
            
            // Check if passwords match (only if confirm password field has content)
            if (confirmPassword.length > 0) {
                if (password === confirmPassword) {
                    updateCheckmark(matchCheck, true);
                } else {
                    updateCheckmark(matchCheck, false);
                }
            } else {
                // Reset match check if confirm field is empty
                updateCheckmark(matchCheck, false);
            }
            
            // Enable or disable submit button based on validation
            if (password.length >= 8 && 
                /[A-Za-z]/.test(password) && 
                /\d/.test(password) && 
                /[\W_]/.test(password) && 
                password === confirmPassword && 
                confirmPassword.length > 0) {
                submitBtn.disabled = false;
            } else {
                submitBtn.disabled = true;
            }
        }
        
        function updateCheckmark(element, isValid) {
            const icon = element.querySelector("i");
            if (isValid) {
                icon.classList.remove("fa-circle-xmark", "text-red-500");
                icon.classList.add("fa-circle-check", "text-green-500");
            } else {
                icon.classList.remove("fa-circle-check", "text-green-500");
                icon.classList.add("fa-circle-xmark", "text-red-500");
            }
        }
        
        // Add event listeners for live validation
        passwordField.addEventListener("input", updateValidationUI);
        confirmPasswordField.addEventListener("input", updateValidationUI);
        
        // Disable the submit button initially
        submitBtn.disabled = true;
        
        // Form submission handler
        resetForm.addEventListener("submit", function(event) {
            const password = passwordField.value;
            const confirmPassword = confirmPasswordField.value;
            const passwordPattern = /^(?=.*\d)(?=.*[A-Za-z])(?=.*[\W_]).{8,}$/;

            if (!passwordPattern.test(password)) {
                event.preventDefault();
                alert("Please fulfill all password requirements.");
                return;
            }

            if (password !== confirmPassword) {
                event.preventDefault();
                alert("Passwords do not match!");
            }
        });
    });
  </script>
</body>
</html>